{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CalenderFx Introduction CalenderFx is open-source api built for the purpose of integrating Ethiopian calender system based on npm package called abushakir-js Inorder to integrate CalenderFx to your app register in CalenderFx homepage to get API key and make sure to read the HTTPS methods and implementation instructions listed below. Base API path: https://calenderfx-api.onrender.com AbushakirJs (\u1263\u1215\u1228 \u1203\u1233\u1265) \"Bahire Hasab /'b\u0259hr\u025b h\u0259s\u0259b'/ \" simply means \"An age with a descriptive and chronological number\". In some books it can also be found as \"Hasabe Bahir\", in a sense giving time an analogy, resembling a sea. The words Bahire Hasab originate from the ancient language of Ge'ez, ( Arabic: Abu Shakir) is a time-tracking method, devised by the 12th pope of Alexandria, Pope St. Dimitri. This package allows developers to implement Ethiopian Calendar and Datetime System in their application(s)`. This package is implemented using the UNIX EPOCH which means it's not a conversion of any other calendar system into Ethiopian, for instance, Gregorian Calendar. Unix Epoch is measured using milliseconds since 01 Jan, 1970 UTC. In UNIX EPOCH leap seconds are ignored. Client Implementations JSON:API has a great advantage in that since its standardised, API-agnostic tools can be made to abstract away the semantics of consuming and working with the data. It is recommended that you use a JSON:API client to implement the Kitsu API for this reason. Many implementations in over 13 languages can be found on the JSON:API website . HTTP Methods Method Description GET Fetch - retrieve resources POST Create - create new resource End-points User This collection of end-points consists of requests to post, get and update user data. End-point Method Description Body /signup POST signing new user { username, email, password, purpose } /login POST logging to existing account { username, password } /update PUT updating username and password) { newUsername, email, newPassword } Response Code Message 200 { token, user : { username, email, password, api_key, role } } 400 { msg: \"Please enter all fields\" } { msg: \"user exists\" } { msg: \"user doesn't exist\" } Calenderfx-API This collection of end-points consists of requests to use basic functions of CalendarFx. End-point Method Description Body Params /api/toEC POST converting GC to EC { year, month, day } api_key /api/toGeez GET converting arabic number to geez { number } api_key /api/getHolidays GET getting holidays {} api_key /api/getTheCurrentDate GET getting the current date {} api_key /api/getNextYear GET getting the next year {} api_key /api/getPreviousYear GET getting the previous year {} api_key /api/getNextMonth GET getting the next month {} api_key /api/getPreviousMonth GET getting the previous month {} api_key /api/getEvange GET getting evange {} api_key Admin This collection of end-points consists of requests to get and delete user by the adminstrator . End-point Method Description Body/ Param /users POST getting all the users {} /user/:id POST getting user by id id /user/:username PUT getting user by username username /user/remove Delete removing user { id } Headers Type Value Content-Type application/json x-auth-token token Response Code Message 200 { username, email, password, api_key, role, registerd_at, requests } 400 { msg: \"Please enter all fields\" } { msg: \"user doesn't exist\" }","title":"Docs"},{"location":"#calenderfx","text":"","title":"CalenderFx"},{"location":"#introduction","text":"CalenderFx is open-source api built for the purpose of integrating Ethiopian calender system based on npm package called abushakir-js Inorder to integrate CalenderFx to your app register in CalenderFx homepage to get API key and make sure to read the HTTPS methods and implementation instructions listed below. Base API path: https://calenderfx-api.onrender.com","title":"Introduction"},{"location":"#abushakirjs","text":"\"Bahire Hasab /'b\u0259hr\u025b h\u0259s\u0259b'/ \" simply means \"An age with a descriptive and chronological number\". In some books it can also be found as \"Hasabe Bahir\", in a sense giving time an analogy, resembling a sea. The words Bahire Hasab originate from the ancient language of Ge'ez, ( Arabic: Abu Shakir) is a time-tracking method, devised by the 12th pope of Alexandria, Pope St. Dimitri. This package allows developers to implement Ethiopian Calendar and Datetime System in their application(s)`. This package is implemented using the UNIX EPOCH which means it's not a conversion of any other calendar system into Ethiopian, for instance, Gregorian Calendar. Unix Epoch is measured using milliseconds since 01 Jan, 1970 UTC. In UNIX EPOCH leap seconds are ignored.","title":"AbushakirJs (\u1263\u1215\u1228 \u1203\u1233\u1265)"},{"location":"#client-implementations","text":"JSON:API has a great advantage in that since its standardised, API-agnostic tools can be made to abstract away the semantics of consuming and working with the data. It is recommended that you use a JSON:API client to implement the Kitsu API for this reason. Many implementations in over 13 languages can be found on the JSON:API website .","title":"Client Implementations"},{"location":"#http-methods","text":"Method Description GET Fetch - retrieve resources POST Create - create new resource","title":"HTTP Methods"},{"location":"#end-points","text":"","title":"End-points"},{"location":"#user","text":"This collection of end-points consists of requests to post, get and update user data. End-point Method Description Body /signup POST signing new user { username, email, password, purpose } /login POST logging to existing account { username, password } /update PUT updating username and password) { newUsername, email, newPassword } Response Code Message 200 { token, user : { username, email, password, api_key, role } } 400 { msg: \"Please enter all fields\" } { msg: \"user exists\" } { msg: \"user doesn't exist\" }","title":"User"},{"location":"#calenderfx-api","text":"This collection of end-points consists of requests to use basic functions of CalendarFx. End-point Method Description Body Params /api/toEC POST converting GC to EC { year, month, day } api_key /api/toGeez GET converting arabic number to geez { number } api_key /api/getHolidays GET getting holidays {} api_key /api/getTheCurrentDate GET getting the current date {} api_key /api/getNextYear GET getting the next year {} api_key /api/getPreviousYear GET getting the previous year {} api_key /api/getNextMonth GET getting the next month {} api_key /api/getPreviousMonth GET getting the previous month {} api_key /api/getEvange GET getting evange {} api_key","title":"Calenderfx-API"},{"location":"#admin","text":"This collection of end-points consists of requests to get and delete user by the adminstrator . End-point Method Description Body/ Param /users POST getting all the users {} /user/:id POST getting user by id id /user/:username PUT getting user by username username /user/remove Delete removing user { id } Headers Type Value Content-Type application/json x-auth-token token Response Code Message 200 { username, email, password, api_key, role, registerd_at, requests } 400 { msg: \"Please enter all fields\" } { msg: \"user doesn't exist\" }","title":"Admin"}]}